networks:
  kestra-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local
  spark-data:
    external: true

services:
  postgres:
    networks:
      - kestra-network
    image: postgres:16.6
    volumes:
      - "./project_insides/kestra-data/postgres-data:/var/lib/postgresql/data:rw"
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
    ports:
      - "15432:5432"

  kestra:
    networks:
      - kestra-network
    image: kestra/kestra:v0.21.6
    pull_policy: always
    user: "root"
    command: server standalone
    volumes:
      - ./project_insides/kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - ./project_insides/kestra-data/kestra-wd:/tmp/kestra-wd
      - ./project_insides/pyspark/scripts:/opt/spark/scripts
      - spark-data:/data
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            log:
              level: DEBUG
            basicAuth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          plugins:
            configurations:
              - type: io.kestra.plugin.scripts.runner.docker.Docker
                values:
                  volume-enabled: true
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy

  pyspark-master:
   image: bitnami/spark:latest
   container_name: pyspark-master
   networks:
     - kestra-network
   user: "root"
   command: /opt/bitnami/spark/sbin/start-master.sh
   volumes:
     - ./project_insides/pyspark/scripts:/opt/spark/scripts
     - ./project_insides/pyspark/logs:/opt/spark/logs
     - spark-data:/data
   ports:
     - "4040:4040"
     - "7077:7077"
   environment:
     - SPARK_MASTER=spark://pyspark-master:7077
   depends_on:
     - postgres     
 
  pyspark-worker:
   image: bitnami/spark:latest
   container_name: pyspark-worker
   networks:
     - kestra-network
   user: "root"
   command: /opt/bitnami/spark/sbin/start-worker.sh spark://pyspark-master:7077
   volumes:
      - ./project_insides/pyspark/scripts:/opt/spark/scripts
      - ./project_insides/pyspark/logs:/opt/spark/logs
      - spark-data:/data
   ports:
     - "4041:4040"
   depends_on:
     - pyspark-master

